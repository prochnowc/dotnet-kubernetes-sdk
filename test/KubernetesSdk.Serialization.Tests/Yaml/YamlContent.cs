// Copyright (c) Christian Prochnow and Contributors. All rights reserved.
// Licensed under the Apache-2.0 license. See LICENSE file in the project root for full license information.

namespace Kubernetes.Serialization.Yaml;

public static class YamlContent
{
    public const string Deployment = "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  uid: 49ac4b33-f919-4818-b2c7-7fbe37389450\n  resourceVersion: '237146532'\n  generation: 13\n  creationTimestamp: '2021-10-13T11:28:50Z'\n  labels:\n    addonmanager.kubernetes.io/mode: Reconcile\n    k8s-app: kube-dns\n    kubernetes.azure.com/managedby: aks\n    kubernetes.io/cluster-service: 'true'\n    kubernetes.io/name: CoreDNS\n    version: v20\n  annotations:\n    deployment.kubernetes.io/revision: '9'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\",\"version\":\"v20\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\",\"version\":\"v20\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\"},\"labels\":{\"k8s-app\":\"kube-dns\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v20\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8181,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":3,\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"procMount\":\"Default\",\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/etc/coredns/custom\",\"name\":\"custom-config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"},{\"configMap\":{\"name\":\"coredns-custom\",\"optional\":true},\"name\":\"custom-config-volume\"},{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n  managedFields:\n    - manager: kube-controller-manager\n      operation: Update\n      apiVersion: apps/v1\n      time: '2022-10-04T21:13:12Z'\n      fieldsType: FieldsV1\n      fieldsV1:\n        f:status:\n          f:conditions:\n            .: {}\n            k:{\"type\":\"Available\"}:\n              .: {}\n              f:type: {}\n            k:{\"type\":\"Progressing\"}:\n              .: {}\n              f:lastTransitionTime: {}\n              f:status: {}\n              f:type: {}\n    - manager: kubectl-client-side-apply\n      operation: Update\n      apiVersion: apps/v1\n      time: '2023-06-19T21:18:19Z'\n      fieldsType: FieldsV1\n      fieldsV1:\n        f:metadata:\n          f:annotations:\n            .: {}\n            f:kubectl.kubernetes.io/last-applied-configuration: {}\n          f:labels:\n            .: {}\n            f:addonmanager.kubernetes.io/mode: {}\n            f:k8s-app: {}\n            f:kubernetes.azure.com/managedby: {}\n            f:kubernetes.io/cluster-service: {}\n            f:kubernetes.io/name: {}\n            f:version: {}\n        f:spec:\n          f:progressDeadlineSeconds: {}\n          f:replicas: {}\n          f:revisionHistoryLimit: {}\n          f:selector: {}\n          f:strategy:\n            f:rollingUpdate:\n              .: {}\n              f:maxSurge: {}\n              f:maxUnavailable: {}\n            f:type: {}\n          f:template:\n            f:metadata:\n              f:annotations:\n                .: {}\n                f:prometheus.io/port: {}\n              f:labels:\n                .: {}\n                f:k8s-app: {}\n                f:kubernetes.azure.com/managedby: {}\n                f:kubernetes.io/cluster-service: {}\n                f:version: {}\n            f:spec:\n              f:affinity:\n                .: {}\n                f:nodeAffinity:\n                  .: {}\n                  f:preferredDuringSchedulingIgnoredDuringExecution: {}\n                  f:requiredDuringSchedulingIgnoredDuringExecution: {}\n                f:podAntiAffinity:\n                  .: {}\n                  f:preferredDuringSchedulingIgnoredDuringExecution: {}\n              f:containers:\n                k:{\"name\":\"coredns\"}:\n                  .: {}\n                  f:args: {}\n                  f:image: {}\n                  f:imagePullPolicy: {}\n                  f:livenessProbe:\n                    .: {}\n                    f:failureThreshold: {}\n                    f:httpGet:\n                      .: {}\n                      f:path: {}\n                      f:port: {}\n                      f:scheme: {}\n                    f:initialDelaySeconds: {}\n                    f:periodSeconds: {}\n                    f:successThreshold: {}\n                    f:timeoutSeconds: {}\n                  f:name: {}\n                  f:ports:\n                    .: {}\n                    k:{\"containerPort\":53,\"protocol\":\"TCP\"}:\n                      .: {}\n                      f:containerPort: {}\n                      f:name: {}\n                      f:protocol: {}\n                    k:{\"containerPort\":53,\"protocol\":\"UDP\"}:\n                      .: {}\n                      f:containerPort: {}\n                      f:name: {}\n                      f:protocol: {}\n                    k:{\"containerPort\":9153,\"protocol\":\"TCP\"}:\n                      .: {}\n                      f:containerPort: {}\n                      f:name: {}\n                      f:protocol: {}\n                  f:readinessProbe:\n                    .: {}\n                    f:failureThreshold: {}\n                    f:httpGet:\n                      .: {}\n                      f:path: {}\n                      f:port: {}\n                      f:scheme: {}\n                    f:periodSeconds: {}\n                    f:successThreshold: {}\n                    f:timeoutSeconds: {}\n                  f:resources:\n                    .: {}\n                    f:limits:\n                      .: {}\n                      f:cpu: {}\n                      f:memory: {}\n                    f:requests:\n                      .: {}\n                      f:cpu: {}\n                      f:memory: {}\n                  f:securityContext:\n                    .: {}\n                    f:allowPrivilegeEscalation: {}\n                    f:capabilities:\n                      .: {}\n                      f:add: {}\n                      f:drop: {}\n                    f:procMount: {}\n                    f:readOnlyRootFilesystem: {}\n                  f:terminationMessagePath: {}\n                  f:terminationMessagePolicy: {}\n                  f:volumeMounts:\n                    .: {}\n                    k:{\"mountPath\":\"/etc/coredns\"}:\n                      .: {}\n                      f:mountPath: {}\n                      f:name: {}\n                      f:readOnly: {}\n                    k:{\"mountPath\":\"/etc/coredns/custom\"}:\n                      .: {}\n                      f:mountPath: {}\n                      f:name: {}\n                      f:readOnly: {}\n                    k:{\"mountPath\":\"/tmp\"}:\n                      .: {}\n                      f:mountPath: {}\n                      f:name: {}\n              f:dnsPolicy: {}\n              f:priorityClassName: {}\n              f:restartPolicy: {}\n              f:schedulerName: {}\n              f:securityContext:\n                .: {}\n                f:seccompProfile:\n                  .: {}\n                  f:type: {}\n              f:serviceAccount: {}\n              f:serviceAccountName: {}\n              f:terminationGracePeriodSeconds: {}\n              f:tolerations: {}\n              f:volumes:\n                .: {}\n                k:{\"name\":\"config-volume\"}:\n                  .: {}\n                  f:configMap:\n                    .: {}\n                    f:defaultMode: {}\n                    f:items: {}\n                    f:name: {}\n                  f:name: {}\n                k:{\"name\":\"custom-config-volume\"}:\n                  .: {}\n                  f:configMap:\n                    .: {}\n                    f:defaultMode: {}\n                    f:name: {}\n                    f:optional: {}\n                  f:name: {}\n                k:{\"name\":\"tmp\"}:\n                  .: {}\n                  f:emptyDir: {}\n                  f:name: {}\n    - manager: kube-controller-manager\n      operation: Update\n      apiVersion: apps/v1\n      time: '2023-08-03T18:04:11Z'\n      fieldsType: FieldsV1\n      fieldsV1:\n        f:metadata:\n          f:annotations:\n            f:deployment.kubernetes.io/revision: {}\n        f:status:\n          f:availableReplicas: {}\n          f:conditions:\n            k:{\"type\":\"Available\"}:\n              f:lastTransitionTime: {}\n              f:lastUpdateTime: {}\n              f:message: {}\n              f:reason: {}\n              f:status: {}\n            k:{\"type\":\"Progressing\"}:\n              f:lastUpdateTime: {}\n              f:message: {}\n              f:reason: {}\n          f:observedGeneration: {}\n          f:readyReplicas: {}\n          f:replicas: {}\n          f:updatedReplicas: {}\n      subresource: status\n  selfLink: /apis/apps/v1/namespaces/kube-system/deployments/coredns\nstatus:\n  observedGeneration: 13\n  replicas: 2\n  updatedReplicas: 2\n  readyReplicas: 2\n  availableReplicas: 2\n  conditions:\n    - type: Available\n      status: 'True'\n      lastUpdateTime: '2023-05-31T03:55:38Z'\n      lastTransitionTime: '2023-05-31T03:55:38Z'\n      reason: MinimumReplicasAvailable\n      message: Deployment has minimum availability.\n    - type: Progressing\n      status: 'True'\n      lastUpdateTime: '2023-06-19T21:18:36Z'\n      lastTransitionTime: '2021-10-13T11:28:50Z'\n      reason: NewReplicaSetAvailable\n      message: ReplicaSet \"coredns-fb6b9d95f\" has successfully progressed.\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n      version: v20\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        k8s-app: kube-dns\n        kubernetes.azure.com/managedby: aks\n        kubernetes.io/cluster-service: 'true'\n        version: v20\n      annotations:\n        prometheus.io/port: '9153'\n    spec:\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n              - key: Corefile\n                path: Corefile\n            defaultMode: 420\n        - name: custom-config-volume\n          configMap:\n            name: coredns-custom\n            defaultMode: 420\n            optional: true\n        - name: tmp\n          emptyDir: {}\n      containers:\n        - name: coredns\n          image: mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4\n          args:\n            - '-conf'\n            - /etc/coredns/Corefile\n          ports:\n            - name: dns\n              containerPort: 53\n              protocol: UDP\n            - name: dns-tcp\n              containerPort: 53\n              protocol: TCP\n            - name: metrics\n              containerPort: 9153\n              protocol: TCP\n          resources:\n            limits:\n              cpu: '3'\n              memory: 500Mi\n            requests:\n              cpu: 100m\n              memory: 70Mi\n          volumeMounts:\n            - name: config-volume\n              readOnly: true\n              mountPath: /etc/coredns\n            - name: custom-config-volume\n              readOnly: true\n              mountPath: /etc/coredns/custom\n            - name: tmp\n              mountPath: /tmp\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 8080\n              scheme: HTTP\n            initialDelaySeconds: 60\n            timeoutSeconds: 5\n            periodSeconds: 10\n            successThreshold: 1\n            failureThreshold: 5\n          readinessProbe:\n            httpGet:\n              path: /ready\n              port: 8181\n              scheme: HTTP\n            timeoutSeconds: 1\n            periodSeconds: 10\n            successThreshold: 1\n            failureThreshold: 3\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n          imagePullPolicy: IfNotPresent\n          securityContext:\n            capabilities:\n              add:\n                - NET_BIND_SERVICE\n              drop:\n                - all\n            readOnlyRootFilesystem: true\n            allowPrivilegeEscalation: false\n            procMount: Default\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 30\n      dnsPolicy: Default\n      serviceAccountName: coredns\n      serviceAccount: coredns\n      securityContext:\n        seccompProfile:\n          type: RuntimeDefault\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n              - matchExpressions:\n                  - key: kubernetes.azure.com/cluster\n                    operator: Exists\n                  - key: type\n                    operator: NotIn\n                    values:\n                      - virtual-kubelet\n                  - key: kubernetes.io/os\n                    operator: In\n                    values:\n                      - linux\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 100\n              preference:\n                matchExpressions:\n                  - key: kubernetes.azure.com/mode\n                    operator: In\n                    values:\n                      - system\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 10\n              podAffinityTerm:\n                labelSelector:\n                  matchExpressions:\n                    - key: k8s-app\n                      operator: In\n                      values:\n                        - kube-dns\n                topologyKey: topology.kubernetes.io/zone\n            - weight: 5\n              podAffinityTerm:\n                labelSelector:\n                  matchExpressions:\n                    - key: k8s-app\n                      operator: In\n                      values:\n                        - kube-dns\n                topologyKey: kubernetes.io/hostname\n      schedulerName: default-scheduler\n      tolerations:\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - key: node.kubernetes.io/unreachable\n          operator: Exists\n          effect: NoExecute\n          tolerationSeconds: 30\n        - key: node.kubernetes.io/not-ready\n          operator: Exists\n          effect: NoExecute\n          tolerationSeconds: 30\n      priorityClassName: system-node-critical\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n      maxSurge: 25%\n  revisionHistoryLimit: 2\n  progressDeadlineSeconds: 600\n";
}