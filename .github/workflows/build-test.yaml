name: Build and Test

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
    types: [assigned, opened, synchronize, reopened]

env:
  BUILD_CONFIGURATION: Debug

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    name: .NET Build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            8.0.x
      - name: Restore
        run: dotnet restore
      - name: Build Generator
        run: dotnet build --configuration ${{env.BUILD_CONFIGURATION}} --no-restore ./src/KubernetesSdk.Generator/KubernetesSdk.Generator.csproj
      - name: Build
        run: dotnet build --configuration ${{env.BUILD_CONFIGURATION}} --no-restore
      - name: Test
        run: dotnet test --configuration ${{env.BUILD_CONFIGURATION}} --collect:"Code Coverage;Format=Cobertura" --logger trx --results-directory test-results --no-build
      - name: Build packages
        run: dotnet pack --configuration ${{env.BUILD_CONFIGURATION}} --output ./artifacts --no-build
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          directory: ./test-results
#          files: '*.cobertura.xml'
#
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./test-results
        if: ${{ always() }} # Always run this step even on failure
